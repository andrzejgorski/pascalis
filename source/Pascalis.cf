    comment "//" ;
    comment "{" "}" ;

    Prog. Program   ::= "program" Ident ";" [Decl] "incipe" [Stm] "fini." ;
    DVar.  Decl     ::= "variabilis" Ident ":" Type ;

	terminator Stm "" ;
	separator  Decl "," ;
	separator  nonempty Ident "," ;

    Skip.    Stm ::= "persulta" ";" ;
    SPrint.  Stm ::= "incribo" "(" Exp ")" ";" ;
	SDecl.   Stm ::= Decl ";"  ;
	SExp.    Stm ::= Exp ";" ;
	SBlock.  Stm ::= "incipe" [Stm] "fini" ;
	SWhile.  Stm ::= "donec" Exp "fac" Stm ;
	SReturn. Stm ::= "refer" Exp ";" ;

	EAss.    Exp  ::= Ident "=" Exp ;
	ELt.     Exp1 ::= Exp2 "<" Exp2 ;
	EAdd.    Exp2 ::= Exp2 "+" Exp3 ;
	ESub.    Exp2 ::= Exp2 "-" Exp3 ;
	EMul.    Exp3 ::= Exp3 "*" Exp4 ;
	Call.    Exp4 ::= Ident "(" [Exp] ")" ;

	EVar.    Exp4 ::= Ident ;
	EStr.    Exp4 ::= String ;
	EInt.    Exp4 ::= Integer ;
	EDouble. Exp4 ::= Double ;

	coercions Exp 4 ;

	separator Exp "," ;

    TInt.   Type ::= "numeri integri" ;
